- num_layers = 3

%h1 Tile Editor

.tile_editor
  .screen
    - num_layers.times do
      .layer
        .placed

    .selection

  .layer_select
    %h3 Layer:
    .choice.active Background
    .choice Midground
    .choice Foreground

  %h3 Tiles:
  .tiles
    - Collection.find(params[:tileset_id]).sprites.each do |sprite|
      = image_tag(sprite.image.url, :alt => sprite.display_name)

:coffeescript
  resolution = 32

  currentLayer = 0

  modeDown = null

  localPosition = (element) ->
    offset = element.offset()

    position =
      localX: (event.pageX - offset.left).snap(resolution)
      localY: (event.pageY - offset.top).snap(resolution)

  shiftTile = (mode, amount) ->
    tileCount = $(".tiles img").length

    cur = $(".tiles ." + mode).removeClass(mode).index()

    $(".tiles img").eq((cur + amount).mod(tileCount)).addClass(mode)

  prevTile = (mode) ->
    shiftTile(mode, -1)

  nextTile = (mode) ->
    shiftTile(mode, 1)

  toggleGrid = (mode) ->
    if ($('.screen').css('background-image') == "none")
      $('.screen').css(
        'background-image': 'url("/images/tile-editor-grid.png")'
        'border-right': '1px solid black'
        'border-bottom': '1px solid black'
      )
    else
      $('.screen').css(
        'background-image': 'none'
        'border': 'none'
      )

  entered = (x, y) ->
    if mode = modeDown
      posString = x + "x" + y

      element = $(".tiles").find("." + mode).clone().removeClass("primary secondary").css(
        position: "absolute"
        top: y
        left: x
      ).attr("data-pos", posString)

      targetLayer = $(".screen .layer").eq(currentLayer).find(".placed")

      targetLayer.find("[data-pos='" + posString + "']").remove()

      targetLayer.append(element)

  clickMode = (event) ->
    if event.which == 1
      "primary"
    else if event.which == 3
      "secondary"

  $(".tile_editor").bind "contextmenu", (event) ->
    event.preventDefault()

  $(".tiles img").live 'mousedown', (event) ->
    event.preventDefault()

    if mode = clickMode event
      $(this).addClass(mode).siblings().removeClass(mode)

  $(".layer_select .choice").live 'mousedown', (event) ->
    $(this).addClass("active").siblings().removeClass("active")

    currentLayer = $(this).index() - 1

  $(".screen").bind "mousemove", (event) ->
    pos = localPosition($(this))

    oldPos = $(".screen .selection").position()

    unless oldPos.left == pos.localX && oldPos.top == pos.localY
      entered(pos.localX, pos.localY)

      $(".screen .selection").css
        left: pos.localX
        top: pos.localY

  $(".screen").bind "mousedown", (event) ->
    if modeDown = clickMode event
      pos = localPosition($(this))

      entered(pos.localX, pos.localY)

    event.preventDefault()

  $(document).bind "mouseup", (event) ->
    modeDown = null

  hotkeys =
    a: (event) ->
      prevTile("primary")
    z: (event) ->
      nextTile("primary")
    s: (event) ->
      prevTile("secondary")
    x: (event) ->
      nextTile("secondary")
    g: (event) ->
      toggleGrid()

  $.each hotkeys, (key, fn) ->
    $(document).bind "keydown", key, fn


%style
  :sass
    @import util

    .tile_editor
      .layer_select
        cursor: pointer
        display: inline-block
        font-weight: bold

        .choice
          text-align: center

          &.active
            background-color: #1084CE
            color: #FFF
            width: 75px

      .screen
        background-color: #CCC
        background-image: url('/images/tile-editor-grid.png')
        border-bottom: 1px solid black
        border-right: 1px solid black
        display: inline-block
        height: 320px
        overflow: hidden
        position: relative
        width: 480px

        .layer
          height: 320px
          left: 0
          position: absolute
          top: 0
          width: 480px

        .selection
          border: 2px solid green
          height: 29px
          position: absolute
          width: 29px

      img
        +inline-block

        margin-bottom: 2px
        padding: 1px

        &.primary, &.secondary
          border: 1px solid
          padding: 0px

        &.primary
          border-color: green
        &.secondary
          border-color: blue