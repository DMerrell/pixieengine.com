= render :partial => "pixie"

#error

%ul.filetree
  %li
    %span.file.script{ 'data-id' => 'main', :class => app.lang } Main
  - app.libraries.each do |library|
    %li.closed{ :title => library.title }
      %span.folder= library.title
      %ul
        - library.scripts.each do |script|
          %li{ :title => script.title }
            %span.file.script{ 'data-id' => script.id, :class => script.lang }= script.title
            .tab_data{ :id => "script#{script.id}", 'data-lang' => script.lang }
              - form_for [:developer, script] do |form|
                = form.hidden_field :code, { :id => "script_code#{script.id}" }
                = form.text_area :src, { :id => "script_src#{script.id}" }

  %li.closed{ :title => "Resources" }
    %span.folder.resources Resources
    %ul
      %li.closed{ :title => "Sprites" }
        %span.folder.sprites Sprites
        %ul
          %li{ :title => "New Sprite" }
            %span.file.new_sprite New Sprite
          - app.app_sprites.each do |app_sprite|
            - title = app_sprite.name
            %li{ :title => title }
              %span.file.sprite{ 'data-id' => app_sprite.id, 'data-width' => app_sprite.width, 'data-height' => app_sprite.height, :style => "background-image: url(#{app_sprite.data_url})" }= title

  %li{ :title => "Documentation" }
    %span.file.documentation Documentation

  #scriptmain.tab_data{ 'data-lang' => app.lang }
    - form_for [:developer, app] do |form|
      = form.hidden_field :code
      = form.text_area :src
  #documentation.tab_data
    %iframe.no_border{:src => "/production/apps/#{app.id}/docs/index.html", :width => 550, :height => 600}

#tabs
  %ul

#testZone
  .actions
    %button#save Save
    %button#run Run
  %iframe#testFrame{:src => "/blank.html", :width => app.width, :height => app.height}

#newCanvasModal
  %p
    = label_tag :resize_width, "width"
    = text_field_tag :resize_width, 32, {:title => 'width'}
  %p
    = label_tag :resize_height, "height"
    = text_field_tag :resize_height, 32, {:title => 'height'}

  = button_to_function "New Canvas", "newCanvas()"

:plain
  <script type="text/coffeescript">
    shouldCreateEditor = false
    pixieEditorIds = 0
    langClass = null

    window.newCanvas = ->
      shouldCreateEditor = false
      langClass = "sprite"

      pixieEditor = createPixelEditor
        width: $('#resize_width').val()
        height: $('#resize_height').val()

      pixieEditorId = "pixie_editor" + (pixieEditorIds++)

      pixieEditor.attr('id', pixieEditorId).addClass('tab_data').appendTo('ul.filetree')

      $tabs.tabs 'add', "#" + pixieEditorId, "Sprite" + pixieEditorIds, 0

      $.modal.close()

    window.updateSpriteNode = (appSprite) ->
      cssImageUrl = appSprite.cssImageUrl
      height = appSprite.height
      id = appSprite.id
      title = appSprite.name
      width = appSprite.width

      node = $(".filetree .sprite[data-id=" + id + "]")

      if node.length
        spriteNode = node
        node = node.parent()
      else
        node = $("<li />").attr("title", title)
        spriteNode = $("<span />").text(title).attr('data-id', id).attr('data-width', width).attr('data-height', height).addClass("file sprite").appendTo(node)
        $('.filetree .sprites').next().append(node).children().removeClass('last').last().addClass('last')

      spriteNode.css "backgroundImage", cssImageUrl

      # Reload tab
      spriteNode.click()

    window.createEditor = (panel) ->
      lang = $(panel).attr('data-lang')
      code_id = "#" + $(panel).find('input').eq(2).attr('id')
      src_id = "#" + $(panel).find('textarea').attr('id')

      savedCode = $(src_id).val()

      compiled_js = ''

      compile_source = if lang == 'coffeescript'
        (source) ->
          compiled_js = ''
          try
            compiled_js = CoffeeScript.compile source, noWrap: true
            $(code_id).val compiled_js
            $('#error').hide()
          catch error
            $('#error').text(error.message).show()
      else
        (source) ->
          compiled_js = source
          $(code_id).val compiled_js

      codeTextArea = $(src_id).get(0)
      editor = new CodeMirror.fromTextArea codeTextArea,
        autoMatchParens: true
        content: codeTextArea.value
        height: "600px"
        parserfile: ["tokenize_" + lang + ".js", "parse_" + lang + ".js"]
        path: "/javascripts/codemirror/"
        stylesheet: "/stylesheets/codemirror/" + lang + "_colors.css"
        tabMode: "shift"
        textWrapping: false

      # Listen for keypresses and recompile.
      $(editor.win.document).keyup ->
        currentCode = editor.getCode()

        if currentCode != savedCode
          setUnsaved()
        else
          setSaved()

        compile_source(currentCode)
        $(src_id).val(currentCode)

      lang: lang
      updateSaved: () ->
        savedCode = editor.getCode()

    setUnsaved = () ->
      $("#tabs ul li.ui-state-active").addClass("unsaved")

    setSaved = () ->
      tabLi = $("#tabs ul li.ui-state-active").removeClass("unsaved")
      if c = tabLi.find('a').data('updateSaved')
        c()
      else
        debugger

    runApp = (code) ->
      cacheBust = new Date().getTime()
      sandbox = $("#testFrame")[0].contentWindow.document

      sandbox.open();

      sandbox.write(#{stylesheet_link_tag('screen.css').to_json})
      sandbox.write(#{javascript_include_tag("http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js").to_json.gsub('/', '\\/')})
      sandbox.write('<script src="/developer/apps/#{app.id}/lib.js?' + cacheBust + '"><\/script>')
      sandbox.write(#{app.template.to_json})
      sandbox.write("<script>var cacheBust = " + cacheBust + "; $(function(){"+ code +"});<\/script>")

      sandbox.close()

      # Set focus
      $("#testFrame")[0].contentWindow.focus()

    $('#run').click ->
      runApp $('#app_code').val()

    window.onbeforeunload = ->
      if $("li.unsaved").length > 0
        return "You have some unsaved changes, if you leave now you will lose your work."

    $ ->
      $('ul.filetree').treeview()

      $('.filetree .file.documentation').click ->
        shouldCreateEditor = false
        docSelector = "#documentation"
        langClass = "documentation"

        if $('#tabs ul li a[href="' + docSelector + '"]').length
          $('#tabs ul li a[href="' + docSelector + '"]').click()
        else
          $tabs.tabs 'add', docSelector, $(this).text(), 0

      $('.filetree .file.script').click ->
        shouldCreateEditor = true
        scriptSelector = "#script" + $(this).attr('data-id')

        if $(scriptSelector).parents('#tabs').length
          $('#tabs ul li a[href="' + scriptSelector + '"]').click()
        else
          $tabs.tabs 'add', scriptSelector, $(this).text(), 0

      $('.filetree .file.new_sprite').click ->
        $("#newCanvasModal").modal()

      $('.filetree .file.sprite').live 'click', ->
        shouldCreateEditor = false
        langClass = "sprite"
        appSpriteId = $(this).attr('data-id')
        width = $(this).attr('data-width')
        height = $(this).attr('data-height')

        spriteSelector = "#sprite" + appSpriteId

        if $(spriteSelector).length
          if $(spriteSelector).parents('#tabs').length
            $('#tabs ul li a[href="' + spriteSelector + '"]').click()

            return
          else
            $(spriteSelector).remove()

        bgCss = $(this).css('backgroundImage')
        data = bgCss.substr(4, bgCss.length - 5)
        title = $(this).text()

        pixieEditor = createPixelEditor
          width: width
          height: height
          title: title
          dataUrl: data
          appSpriteId: appSpriteId

        pixieEditor.attr('id', spriteSelector.substr(1)).addClass('tab_data').appendTo($('ul.filetree'))

        $tabs.tabs 'add', spriteSelector, title, 0

      currentPanel = $("#scriptmain")

      window.$tabs = $('#tabs').tabs
        add: (event, ui) ->
          $tabs.tabs('select', '#' + ui.panel.id)

          if shouldCreateEditor
            fileData = createEditor(ui.panel)

            $(ui.tab).data('updateSaved', fileData.updateSaved)
            $(ui.tab).parent().find('span.lang').addClass(fileData.lang)
          else
            if langClass
              $(ui.tab).parent().find('span.lang').addClass(langClass)

          langClass = null

        remove: (event, ui) ->
          $(ui.panel).find(".CodeMirror-wrapping").remove()
          $('.filetree').append(ui.panel)

        select: (event, ui) ->
          currentPanel = ui.panel

        tabTemplate: '<li><span class="ui-icon ui-icon-close"></span><span class="ui-icon lang"></span><a href="#' + '{href}">#' + '{label}</a></li>'

      $('ul.filetree .file.script').first().click()

      $('#save').click ->
        notify("Saving...")
        $(currentPanel).find('form').ajaxSubmit
          type: 'POST'
          success: () ->
            setSaved()
            notify("Saved!")

      $('#tabs span.ui-icon-close').live 'click', ->
        # TODO Prompt if changed
        index = $('li', $tabs).index($(this).parent())
        $tabs.tabs('remove', index)

  </script>
