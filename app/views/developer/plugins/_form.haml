= javascript_include_tag 'codemirror/codemirror', 'codemirror/mirrorframe'

%h2 New Plugin
- form_for [:developer, @plugin] do |form|
  = form.error_messages

  = form.hidden_field :parent_id

  %p
    = form.label :title
    = form.text_field :title

  %p
    = form.label :description
    = form.text_field :description

  = form.label :code
  .border
    = form.text_area :code

  .left= button_to_function "Test Plugin", "testPlugin()"
  .right= form.submit
  .clear

#testArea
= stylesheet_link_tag 'pixie/pixie'
= javascript_include_tag 'pixie/jqcolor', 'pixie/jquery.hotkeys', 'pixie/pixie'
- width = 8
- height = 8

:javascript
  var textarea = $('#plugin_code').get(0);
  var editor = new CodeMirror.fromTextArea(textarea, {
    height: "350px",
    content: textarea.value,
    parserfile: ["tokenizejavascript.js", "parsejavascript.js"],
    stylesheet: "/stylesheets/codemirror/jscolors.css",
    path: "/javascripts/codemirror/",
    autoMatchParens: true
  });

  function testPlugin() {
    $("#pixie_test").remove();

    $('<div id="pixie_test" />').pixie({
      width: #{width},
      height: #{height},
      initializer: function(canvas) {
        canvas.addTool(eval("(" + editor.getCode() + ")"));

        // Load Test Data
        (function(data) {
          if(data) {
            canvas.eachPixel(function(pixel, x, y) {
              var pos = x + y*canvas.width;
              pixel.color(data[pos], true);
            });
          }
        }(["rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(0,255,0,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(255,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)","rgba(0,0,255,1.0)"]));

      }
    }).appendTo("#testArea");
  }
