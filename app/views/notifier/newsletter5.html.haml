:ruby
  surf = Project.find 721
  demo = Project.find 34

  @paragraphs = ["We’ve been really focusing on making Pixie as easy to use as possible. In order for all of you to be able to create the best games you can we know it is necessary to have excellent reference material about the available libraries.","#{link_to image_tag("#{root_url}assets/newsletters/documentation.png", :alt => "documentation", :title => "documentation", :style => "display:inline-block;float:right;margin-left:1em;"), ide_project_url(demo, @link_tracking)} Our documentation has been completely revamped and includes tons of code samples to get you up and running as quickly as possible. If you just want a page to look at as a tab in your browser when you have questions, you can open up #{link_to 'Documentation', "http://pixieengine.com/production/projects/34/docs/index.html"} or navigate to them through the documentation link in the #{link_to 'Wiki', "https://docs.google.com/document/d/1N_VbAu7hPmOQIL2XjLr0gTVfLL3W2qPWS3o1id4d-xI/edit?hl=en_US"}. If you are too immersed in the IDE and can’t bear to leave, then you can click on the Documentation book to open them in a new tab.","Documentation is an ongoing task and we are working to improve it daily. If you have questions the documentation can't answer be sure to ask in the Forum or in the chat and we'll help you out, then make sure that the answers work their way back to the documentation.","Sadly, the Kongregate export walkthrough is on hiatus. It turns out that they rejected our game because “iframe games are generally reserved for virtual-goods enabled MMOs”. We're always looking for new places to export games to, that way PixieEngine developers will have the most options available for distribution. The HTML5 world moves fast, new channels are always opening up.","#{project_preview_left(surf)} #{link_to image_tag("#{root_url}assets/newsletters/surf_debug.png", :alt => "debugging", :title => "debugging", :style => "display:inline-block;float:right;margin-left:1em;"), fullscreen_project_url(surf, @link_tracking)} The featured tutorial we have this week is the annotated source of Daniel X. Moore’s Ludum Dare entry from last week, #{link_to surf.display_name, ide_project_url(surf, @link_tracking)}. The code is very clear and filled with comments explaining each aspect of the game. It includes some important gems, such as setting up a camera to follow your player, debugging your collision detection, and programmatically generating level content.","Thanks for reading, and keep making those awesome games!"]

= render :partial => "newsletter"
