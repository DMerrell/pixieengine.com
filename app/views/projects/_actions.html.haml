%nav.top.actions
  - if demo? || has_access?
    %button#save Save
    .button_group
      %button#new> New
      %button#export(title="Download your project files")> Export

  %button#fork Clone

  .button_group
    %button#run> Run
    %button#test> Test
    %button#console> Console
  - if demo? || has_access?
    .button_group
      %button#build(title="Publish the current version of your game")> Publish
      %button#update_libs(title="Update to the latest version of libraries defined in pixie.json")> Update Libs

  - if current_user
    - if !current_user.help_tips
    - else
      %button#help>
        %span.static-help(alt="Help")
        Help
  - else
    %button#help>
      %span.static-help(alt="Help")
      Help

  .status
    %label.inline
      %h4 What are you working on?
      %input.message(placeholder="message" type="text")

- content_for :javascript do
  :coffeescript
    # Commands
    window.save = ->
      unsavedTabs = $("#tabs ul li.unsaved")

      if unsavedTabs.length
        # Save each unsaved tab
        unsavedTabs.each ->
          $(this).find('a').data('doSave')?()
      else
        # No unsaved tabs...
        # Force Save of active tab
        # This can work around buggy dirty states in editors
        activeTab = $("#tabs ul li.ui-state-active")
        activeTab.find('a').data('doSave')?()

    window.hotKeys =
      esc: ->
        #TODO Close running app window
        $('#test_frame').remove()
      f1: ->
        $('#help').click()
      f5: ->
        runApp()
      f6: ->
        testApp()

    ctrlKeys =
      s: ->
        save()
      h: ->
        hotSwap()
      n: ->
        newFileModal()
      w: ->
        $('.ui-tabs-selected .ui-icon-close').click()

    # Merge in control keys with ctrl and meta modifiers for OSX
    $.each ctrlKeys, (key, fn) ->
      hotKeys["ctrl+\#{key} meta+\#{key}"] = fn

    window.bindKeys = (scopeDocument, keys) ->
      $.each keys, (key, fn) ->
        $(scopeDocument).bind "keydown", key, (e) ->
          e.preventDefault()
          fn()

    bindKeys(document, hotKeys)

    $("#console").click ->
      gameConsoleWindow.toggle()

    $("#build").click (event) ->
      notify "Publishing..."
      projectCode = buildProjectCode()

      saveFile
        contents: projectCode
        path: #{Project::COMPILED_FILE_NAME.to_json}
        touch: true
        success: ->
          notify("Published!")

      $.post #{generate_docs_project_path(project).to_json}

    $("#fork").click ->
      requireLogin ->
        notify("Hardcore Forking Action...")

        $.post(
          #{fork_project_path(project).to_json},
          format: 'json',
          (data) ->
            notify("<a href='/projects/\#{data.id}/ide'>Your carriage awaits!</a>")
            window.location = "/projects/\#{data.id}/ide"
        )

    $("#update_libs").click ->
      notify("Scheduling library update...")

      $.post #{update_libs_project_path(project).to_json}, ->
        notify("Library update scheduled", 4000)

    $(".actions .status .message").click ->
      $(this).select()

    $("#test").click ->
      testApp()
    $("#run").click ->
      runApp()
    $("#new").click ->
      newFileModal()
    $('#save').click ->
      save()
