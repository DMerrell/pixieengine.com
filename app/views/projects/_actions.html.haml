%header.navbar.navbar-fixed-top(eventCategory="Header")
  .navbar-inner
    .container
      = link_to '', root_path, :class => 'brand logo', :eventLabel => 'logo'
      %nav.top.actions.btn-toolbar(style='margin-top:0')
        - if demo? || has_access?
          .btn-group
            %button.btn.save(style='margin-right:-1px') Save
            %button.btn.dropdown-toggle(data-toggle='dropdown')
              %span.caret
            %ul.dropdown-menu
              %li
                %a#save(href='#')
                  Save
                  %span.hotkey ctrl+s
              %li.divider
              %li
                %a#build Publish
              %li
                %a#export(href='#') Export

          .btn-group
            %button.btn#new New

        .btn-group
          %button.btn.run(style='margin-right:-1px') Run
          %button.btn.dropdown-toggle(data-toggle='dropdown')>
            %span.caret
          %ul.dropdown-menu
            %li
              %a#run(href='#')
                Run
                %span.hotkey f5
            %li
              %a#test(href='#')
                Test
                %span.hotkey f6
            %li.divider
            %li
              %a#console(href='#') Console

        .btn-group
          %a.btn.dropdown-toggle(data-toggle='dropdown' href='#')
            Actions
            %span.caret
          %ul.dropdown-menu
            %li
              %a#fork Clone this project
            - if demo? || has_access?
              %li
                %a#update_libs Update game libraries

        - if current_user
          - if current_user.help_tips
            .btn-group
              %button.btn#help>
                %span.static-help(alt="Help")
                Help
        - else
          .btn-group
            %button.btn#help>
              %span.static-help(alt="Help")
              Help

        .status
          %label.inline
            %h4 What are you working on?
            %input.message(placeholder="message" type="text")

      = render :partial => "/shared/login"

- content_for :javascript do
  :coffeescript
    # Commands
    window.save = ->
      unsavedTabs = $("#tabs ul li.unsaved")

      if unsavedTabs.length
        # Save each unsaved tab
        unsavedTabs.each ->
          $(this).find('a').data('doSave')?()
      else
        # No unsaved tabs...
        # Force Save of active tab
        # This can work around buggy dirty states in editors
        activeTab = $("#tabs ul li.ui-state-active")
        activeTab.find('a').data('doSave')?()

    window.hotKeys =
      esc: ->
        #TODO Close running app window
        $('#test_frame').remove()
      f1: ->
        $('#help').click()
      f5: ->
        runApp()
      f6: ->
        testApp()

    ctrlKeys =
      s: ->
        save()
      h: ->
        hotSwap()
      n: -> # TODO: Doesn't work in Chrome
        newFileModal()
      w: -> # TODO: Doesn't work in Chrome
        $('.ui-tabs-selected .ui-icon-close').click()

    # Merge in control keys with ctrl and meta modifiers for OSX
    $.each ctrlKeys, (key, fn) ->
      hotKeys["ctrl+\#{key} meta+\#{key}"] = fn

    window.bindKeys = (scopeDocument, keys) ->
      $.each keys, (key, fn) ->
        $(scopeDocument).bind "keydown", key, (e) ->
          e.preventDefault()
          fn()

    bindKeys(document, hotKeys)

    $("#console").click ->
      gameConsoleWindow.toggle()

    $("#build").click (event) ->
      notify "Publishing..."
      projectCode = buildProjectCode()

      saveFile
        contents: projectCode
        path: #{Project::COMPILED_FILE_NAME.to_json}
        generate_docs: true
        success: ->
          notify("Published!")

    $("#fork").click ->
      requireLogin ->
        notify("Hardcore Forking Action...")

        $.post(
          "/projects/#{project.id}/fork",
          format: 'json',
          (data) ->
            notify("<a href='/projects/\#{data.id}/ide'>Your carriage awaits!</a>")
            window.location = "/projects/\#{data.id}/ide"
        )

    $("#update_libs").click ->
      notify("Updating Libraries")

      updateLibs ->
        notify("Libraries Updated")

    $(".actions .status .message").click ->
      $(this).select()

    $("#test").click ->
      testApp()
    $(".btn.run, #run").click ->
      runApp()
    $("#new").click ->
      newFileModal()
    $('.btn.save, #save').click ->
      save()
