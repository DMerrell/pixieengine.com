:ruby
  condor = User.find 4
  jump = Project.find Project::JUMP_DEMO_ID
  shoot = Project.find Project::SHOOT_DEMO_ID

  tips = {}

  tips[Project::ASTEROIDS_DEMO_ID] = [{
      :text => "Welcome to out Asteroids tutorial! Click the 'next' arrow to the right to get familiar with the tools"
    }, {
      :file => "file_src_wrappable_coffee",
      :text => "Here is the <b>wrappable</b> module. Modules make it easy to define behavior concisely."
    }, {
      :file => "file_src_base_coffee",
      :text => "Define a base class if you notice repeated behavior across many classes"
    }, {
      :file => "file_sounds_pew_sfs",
      :text => "We use sfxr to make our sound effects. Tweak the inputs to change the way the shot sounds."
    }, {
      :file => "file_animations_ship_animation",
      :text => "Select the <b>explode</b> action. Click on the last frame and you will see that it has the tag 'explode' to fire that event when the frame is reached."
    }, {
      :action => "highlight",
      :target => ".filetree > li[title='images']",
      :text => "The sprite assets in your game are stored here in images. Click <b>New -> Image</b> to make your own or <b>Import</b> to drag one from your computer."
    }]

  tips[Project::DEMO_ID] = [{
      :text => "Welcome to #{user_link(condor)}'s three part platforming demo. Part one is going to cover keyboard input."
    }, {
      :action => "run",
      :text => "Click on the 'Run' button. You'll see a red square moving slowly to the right."
    }, {
      :text => <<-eos
        That was fun but black is a really boring background color. Replace the highlighted line with
        <pre>backgroundColor: Color.random()<span class='static-joystick' alt="Do it already!" title="Do it already!" data-args='["backgroundColor: Color.random()", "# color", "src", "main"]'></span></pre>to spice things up and then run the game again.
      eos
    }, {
      :text => "Here's where we define how that red square behaves.",
      :file => "file_src_square_coffee"
    }, {
      :text => <<-eos
        Okay, we're going to make you the boss now. Replace the highlighted line with
        <pre>I.velocity = Point(-2, 0) if keydown.left<span class="static-joystick" alt="Do it already!" title="Do it already!" data-args='["I.velocity = Point(-2, 0) if keydown.left", "# key handling", "src", "square"]'></span></pre>Now you can press left to change the square's direction.
      eos
    }, {
      :text => "Try to make him move to the right and stop too."
    }, {
      :text => "When you are done here check out lesson two: #{link_to 'Jumping', ide_project_path(jump)}"
    }]

  tips[Project::JUMP_DEMO_ID] = [{
      :text => "Hello fellow jumping enthusiasts. Today we're going to give our little guy hops like Jordan."
    }, {
      :file => "file_src_square_coffee",
      :text => "At the top of the file we have some constants: <pre>SPEED = 7\nGRAVITY = 3\nJUMP_POWER = 17\nFLOAT_FACTOR = 0.4</pre>Take a minute and play around with those values. See if you can find the 'Space Jam' setting."
    }, {
      :text => "This looks a bit complicated but bear with me. Getting the Mario-striving-for-the-top-of-his-jump effect is a bit trickier than you might think. Look at the contents of <pre>self.bind</pre>"
    }, {
      :text => "We're reducing the effect of gravity when jumping, <pre>if jumping I.velocity = I.velocity.add(I.acceleration.scale(FLOAT_FACTOR))</pre> applying it normally when falling, <pre>else if falling I.velocity = I.velocity.add(Point(I.velocity.x, I.acceleration.y))</pre> and if you are neither jumping nor falling and pressing the jump key, we're telling the game that you are now jumping.<pre>else if keydown.z jumping = true I.velocity = Point(I.velocity.x, -JUMP_POWER)</pre>"
    }, {
      :text => "Each step we also set jumping to false if the jump key isn't held.<pre>jumping = false unless keydown.z</pre>"
    }, {
      :text => "Finally, we do a simple check to make sure the player lands on the ground and we tell the game he isn't falling anymore.<pre>if I.y > FLOOR_HEIGHT - 25 I.y = FLOOR_HEIGHT - 25 falling = false else falling = true</pre>"
    }, {
      :text => "In the eagerly anticipated lesson three: #{link_to "Pew", ide_project_path(shoot)}"
    }]

  tips[Project::SHOOT_DEMO_ID] = [{
      :text => "At the NRA's request I've written this demo to show off how to make our square shoot."
    }, {
      :file => "file_src_bullet_coffee",
      :text => "Here is our bullet behavior. The most important thing is that in <pre>self.bind</pre>we check to make sure the bullet doesn't go through the floor.<pre>self.destroy() if I.y > FLOOR_HEIGHT + 5</pre>"
    }, {
      :file => "file_src_square_coffee",
      :text => "Take a look at the changes we made to this square."
    }, {
      :action => "highlight",
      :file => "file_src_square_coffee",
      :text => "Look below the highlighted line. We have added a facing variable to keep track of where our hero is looking. We will use it to determine the direction to fire bullets.<pre>facing = Point(1, 0)</pre>"
    }, {
      :text => "Pressing the shoot key tells the engine that it should add an instance of our bullet class. <pre>if justPressed.x engine.add class: 'Bullet' x: I.x + I.width y: I.y width: 5 height: 5 velocity: facing.scale(BULLET_SPEED)</pre>"
    }, {
      :file => "file_src_enemy_coffee",
      :text => "Shooting bullets wouldn't be any fun without something to shoot at. We have created a very basic target and named it Enemy."
    }, {
      :text => "Now in main we need to make sure that we detect when bullets hit enemies and respond accordingly."
    }, {
      :action => "highlight",
      :text => "We iterate through all the enemies and bullets, and check whether their bounds overlap. If they do then we destroy both the bullet and the enemy.<pre>for enemy in enemies for bullet in bullets if Collision.rectangular(enemy.bounds(), bullet.bounds()) enemy.destroy() bullet.destroy()</pre>"
    }, {
      :text => "That's the end of this epic trilogy. Look back at all we accomplished. At the start all we had was a randomly generated background color and now we have given birth to this square who can jump and annihilate his foes. Take a moment to be the proud papa."
    }]

  tips["default"] = [{
      :target => "nav.left",
      :text => "This is the code editor where you can edit your applications in the CoffeeScript language."
    }, {
      :action => "highlight",
      :target => "ul.filetree",
      :text => "The files needed to create your game are here."
    }, {
      :target => "#run",
      :text => "Click 'Run' to play through your game."
    }, {
      :action => "run",
      :target => "#test_frame",
      :text => "See the results, then make changes to your code as you wish."
    }, {
      :target => ".file.documentation",
      :text => "Here you can read up on the provided classes."
    }, {
      :target => "#export",
      :text => "Pixie is an open platform. Click 'Export' to download the last saved version of your project."
    }, {
      :target => "#import",
      :text => "Click 'Import' to add your own images, javascript, and coffeescript files."
    }, {
      :target => "#import_drag_zone",
      :text => "Drag files from your desktop to the file importer to make them available in your game."
    }, {
      :target => "#test",
      :text => "Click the 'Test' button to run unit-tests. These can come in handy if you're working with heavily algorithmic stuff or library code."
    }, {
      :target => "#save",
      :text => "Click 'Save' to save changes to a file."
    }, {
      :target => ".actions .status",
      :text => "All your changes are backed by version control. Your current status is saved as a commit message."
    }, {
      :text => "That's it for the tips. The IDE is a work in progress, so ask or leave #{link_to "feedback", "/survey", :target => "_blank"} if you have any questions!"
    }]

#tips{:style => "display: none;"}
  - if current_user
    - if current_user.help_tips
      -tooltips = tips[project.id] || tips["default"]

      -tooltips.each do |tip|
        .tip{ "data-file" => tip[:file] || "file_src_main_coffee", "data-action" => tip[:action] || "open", "data-point_to" => tip[:target] || "selected" }
          .text= tip[:text].html_safe
  - else
    -tooltips = tips[project.id] || tips["default"]

    -tooltips.each do |tip|
      .tip{ "data-file" => tip[:file] || "file_src_main_coffee", "data-action" => tip[:action] || "open", "data-point_to" => tip[:target] || "selected" }
        .text= tip[:text].html_safe

  .next
    .next_tip.next(title="next" alt="next")
    .next_arrow
  .close
    .close_tip.x(title="close" alt="close")

- content_for :javascript do
  :coffeescript
    $ ->
      $("#tooltip .next_tip, #tooltip .next_arrow, #help").live "click", ->
        nextTip()

      $("#tooltip .close_tip").live "click", ->
        hideTooltip()

      $('.static-joystick').tipsy({ gravity: 'w', live: true })

      findTutorialText = (text, file_directory, file_name) ->
        $("#file_\#{file_directory}_\#{file_name}_coffee iframe").contents().find('span.comment').filter ->
          return $(this).text() == text

      doItNow = (text, tutorialComment, fileDirectory, fileName) ->
        letters = text.split("")
        lettersUsed = []

        $("[data-id='#file_\#{fileDirectory}_\#{fileName}_coffee']").click()

        replacedSnippet = $(findTutorialText(tutorialComment, fileDirectory, fileName)).html("<span class='comment'></span>")
        intervalId = setInterval ->
          nextLetter = letters.shift()
          lettersUsed.push nextLetter
          $(replacedSnippet).html(lettersUsed.join(""))

          if letters.length == 0
            $("#file_\#{fileDirectory}_\#{fileName}_coffee iframe").contents().keyup()
            clearInterval(intervalId)
        , 75

      $('[data-args]').live 'click', ->
        [text, tutorialComment, fileDirectory, fileName] = $(this).data('args')

        doItNow(text, tutorialComment, fileDirectory, fileName)

      tipIndex = -1
      nextTip = ->
        tipIndex += 1
        tips = $("#tips .tip")
        moreTips = tipIndex < tips.length - 1

        tip = tips.eq(tipIndex)

        action = tip.attr('data-action')
        target = tip.attr('data-target')
        fileName = tip.attr('data-file')

        if action == 'open'
          $("[data-id='#\#{fileName}']").click()

        targetElement = $(".ui-tabs-selected")

        hideTooltip()

        if tip.length
          tipMessage = tip.html()

          tipMessage += $("#tips .close").html()

          if moreTips
            tipMessage += $("#tips .next").html()
            tipMessage += $("#tips .next_arrow").html()

          showTooltip(targetElement, tipMessage)
        else
          tipIndex = -1

          if tips.length
            nextTip()

      nextTip()
