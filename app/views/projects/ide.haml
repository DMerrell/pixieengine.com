= render :partial => "actions"

#content
  #error

  .sidebar_container
    .sidebar
      %h3.project_name= project.display_name

  %section
    #tabs.module
      %ul

  #unit_test_window.window(style="top: 100px; left: 200px;")
    %span.ui-icon.ui-icon-close
    %h3.ui-widget-header Test #{project.title}
    %iframe#unit_test_frame

= render :partial => "tips"
= render :partial => "export_modal"
= render :partial => "new_file_modal"
= render :partial => "file_upload"
= render :partial => "shared/hotkeys"

- content_for :javascript do
  = javascript_include_tag "ide/base"

- project_id = params[:id]
- github_token = current_user.oauth_token if current_user

%textarea#code_content(style="display:none;")= project.file_info.to_json

- content_for :javascript do
  :coffeescript
    window.githubToken = #{github_token.to_json}
    window.githubClient = Github.Client(#{github_token.to_json})
    window.MAX_FILE_SIZE = #{Project::MAX_EDITOR_FILE_SIZE}
    window.DEFAULT_CONFIG = #{default_project_config.to_json}
    window.sessionFlashVars = "authenticity_token=#{u form_authenticity_token}&#{session_key_name}=#{u cookies[session_key_name]}"
    window.projectId = #{project_id.to_json}

    $("#content .sidebar_container .bottom").click ->
      requireSubscription ->
        notify("Exporting Chrome Web Store Package ...")

        window.location = #{download_project_path(project, :chrome => 1).to_json}

        $.modal.close()

    window.runCodeInWindow = (code, contentWindow) ->
      sandbox = contentWindow.document
      sandbox.open()
      sandbox.write(#{stylesheet_link_tag('project').to_json})
      sandbox.write(#{javascript_include_tag("http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js").to_json.gsub('/', '\\/')})

      sandbox.write("<canvas width='\#{projectConfig.width}' height='\#{projectConfig.height}'></canvas>")

      sandbox.write("<script>\#{code}<\/script>")

      sandbox.close()

      contentWindow.focus()

    window.testCodeInWindow = (code, contentWindow) ->
      sandbox = contentWindow.document
      sandbox.open()
      sandbox.write(#{stylesheet_link_tag('project').to_json})
      sandbox.write(#{stylesheet_link_tag('qunit').to_json})
      sandbox.write(#{javascript_include_tag("http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js").to_json.gsub('/', '\\/')})
      sandbox.write(#{javascript_include_tag("qunit").to_json.gsub('/', '\\/')})

      sandbox.write($(JST["templates/ide/qunit"]()).html())

      sandbox.write("<script>\#{code}<\/script>")

      sandbox.close()

    window.log = (message) ->
      console.log message

    window.onbeforeunload = ->
      if $("li.unsaved").length
        "You have some unsaved changes, if you leave now you will lose your work."

    window.loadProjectConfig = ->
      try
        window.projectConfig = JSON.parse(tree.file('pixie.json').get('contents'))
      catch e
        console.warn?(e)
        window.projectConfig = {}
      finally
        # Merge in default configs
        window.projectConfig = $.extend(true, {}, DEFAULT_CONFIG, window.projectConfig)
    loadProjectConfig()

    # Autosave hack
    setInterval ->
      # Check project config autosave flag
      if projectConfig?.autosave
        unsavedTabs = $("#tabs ul li.unsaved")

        # TODO: Possibly refactor into a 'save all unsaved tabs'
        # this is slightly different than regular save because
        # regular save has a hack to save the current tab if no unsaved tabs
        # as a workaround for the sfx editor not setting dirty state correctly.
        if unsavedTabs.length
          # Save each unsaved tab
          unsavedTabs.each ->
            $(this).find('a').data('doSave')?()
    , 5000

    $ ->
      # Hack to pre-load main file, README and tutorials
      for fileName in ['src/main.coffee', 'src/main.js', 'README', 'Tutorial.tutorial']
        if file = tree.file(fileName)
          tree.trigger 'openFile', file

      $('#update_libs, #generate_docs, #build, #tag, #export').tipsy
        delayIn: 500
        delayOut: 500
        fade: 50
        gravity: 'n'
