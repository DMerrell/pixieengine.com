= stylesheet_link_tag 'tile_editor'
= render :partial => "tilemaps/templates"

:coffeescript
  window.createTileEditor = (options) ->
    panel = options.panel

    panel.find('form').hide()
    panel.find('.tile_editor').remove()

    try
      data = JSON.parse(panel.find("[name=contents]").val())
    catch e

    editorOptions = $.extend panel.data("options"),
      data: data
      save: ->
        tileEditor.trigger 'doSave'

    tileEditor = $('<div />').appendTo(panel).tileEditor(editorOptions)

    tileEditor.addAction
      name: "Save As"
      perform: ->
        title = prompt("Title")

        if title
          filePath = projectConfig.directories["data"]

          extension = "tilemap"
          dataString = JSON.stringify(tileEditor.mapData())

          newFileNode
            name: title
            type: "tilemap"
            ext: extension
            path: filePath
            contents: dataString

          tileEditor.trigger 'save',
            contents: dataString
            path: filePath + "/" + title + "." + extension

    tileEditor.bind 'doSave', ->
      dataString = JSON.stringify(tileEditor.mapData())

      panel.find("[name=contents]").val(dataString)

      tileEditor.trigger 'save',
        contents: dataString
        path: options.path

      #TODO: This may not be the exact time it is saved
      tileEditor.trigger('clean')

    return tileEditor
