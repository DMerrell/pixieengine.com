%style
  :sass
    @import util
    .editor.entity_editor
      .content
        +boxed_content(21px, 0, 0, 333px)

#entity_editor_template.template
  .editor.entity_editor
    .content
      .module.left
        %h2 Properties
        %table

      %section
        %h2 Events
        .events
          - %w[create destroy step].each do |event|
            %h3= link_to event.titleize, '#'
            .event
              %textarea(name=event)

      .actions.top
        %button.save Save

:coffeescript
  createCodeMirrorEditor = (textArea) ->
    code = textArea.val()
    lang = "coffeescript"

    editor = new CodeMirror.fromTextArea textArea.get(0),
      autoMatchParens: true
      content: code
      height: "100%"
      lineNumbers: true
      parserfile: ["tokenize_" + lang + ".js", "parse_" + lang + ".js"]
      path: "/javascripts/codemirror/"
      stylesheet: ["/stylesheets/codemirror/main.css"]
      tabMode: "shift"
      textWrapping: false

    $(editor.win.document).find('html').toggleClass('light', $(".bulb").hasClass('on'))

    $(editor.win.document).keyup ->
      textArea.val(editor.getCode())

  window.createEntityEditor = (options) ->
    {panel, uuid} = options

    panel.find('form').hide()
    panel.find('.editor').remove()

    try
      data = JSON.parse(panel.find("[name=contents]").val())
    catch e

    editorOptions = $.extend panel.data("options"),
      data: data

    entityEditor = $("#entity_editor_template").tmpl().appendTo(panel)

    entityEditor.find(".events").accordion
      collapsible: true

    entityEditor.find(".events .event textarea").each ->
      input = $(this)
      name = input.attr("name")

      input.val(data[name + "Coffee"])

      createCodeMirrorEditor(input)

    propertyEditor = entityEditor.find('table').propertyEditor(data)
    entityEditor.find('button.save').click ->
      entityEditor.trigger('doSave')

    ###
    entityEditor.addAction
      name: "Save As"
      perform: ->
        title = prompt("Title")

        if title
          filePath = projectConfig.directories["entities"]

          extension = "entity"
          dataString = JSON.stringify(entityEditor.getProps())

          newFileNode
            name: title
            type: "entity"
            ext: extension
            path: filePath
            contents: dataString

          entityEditor.trigger 'save',
            contents: dataString
            path: filePath + "/" + title + "." + extension
    ###

    entityEditor.bind 'doSave', ->
      entityData = propertyEditor.getProps()

      entityEditor.find(".events .event textarea").each ->
        input = $(this)
        name = input.attr("name")

        if name
          source = input.val()

          # Merge in events data
          entityData[name + "Coffee"] = source
          entityData[name] = window.compileCode source, "coffee"

      # Propagate changes back to IDE
      window.entities[uuid] = entityData

      dataString = JSON.stringify(entityData)

      panel.find("[name=contents]").val(dataString)

      entityEditor.trigger 'save',
        contents: dataString
        path: options.path

      #TODO: This may not be the exact time it is saved
      propertyEditor.trigger('clean')

    return entityEditor
