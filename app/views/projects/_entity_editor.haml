#entity_editor_template.template
  .editor.entity_editor.module
    %table

    .actions
      %button.save Save

:coffeescript
  window.createEntityEditor = (options) ->
    {panel, uuid} = options

    panel.find('form').hide()
    panel.find('.editor').remove()

    try
      data = JSON.parse(panel.find("[name=contents]").val())
    catch e

    editorOptions = $.extend panel.data("options"),
      data: data

    entityEditor = $("#entity_editor_template").tmpl().appendTo(panel)

    propertyEditor = entityEditor.find('table').propertyEditor(data)
    entityEditor.find('button.save').click ->
      entityEditor.trigger('doSave')

    ###
    entityEditor.addAction
      name: "Save As"
      perform: ->
        title = prompt("Title")

        if title
          filePath = projectConfig.directories["entities"]

          extension = "entity"
          dataString = JSON.stringify(entityEditor.getProps())

          newFileNode
            name: title
            type: "entity"
            ext: extension
            path: filePath
            contents: dataString

          entityEditor.trigger 'save',
            contents: dataString
            path: filePath + "/" + title + "." + extension
    ###

    entityEditor.bind 'doSave', ->
      entityData = propertyEditor.getProps()
      # Propagate changes back to IDE
      window.entities[uuid] = entityData

      dataString = JSON.stringify(entityData)

      panel.find("[name=contents]").val(dataString)

      entityEditor.trigger 'save',
        contents: dataString
        path: options.path

      #TODO: This may not be the exact time it is saved
      propertyEditor.trigger('clean')

    return entityEditor
