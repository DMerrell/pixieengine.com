%form#new_file_modal.modal
  %h3.header New File

  = label_tag "Choose Type"

  :ruby
    choices = [
      ["Script",
        {:type => "text", :directory => "source", :extension => "coffee", :language => "coffeescript", :template => "script"},
        {}
      ],
      ["Test",
        {:type => "text", :directory => "test", :extension => "coffee", :language => "coffeescript", :template => "test"},
        {}
      ],
      ["Image",
        {:type => "image", :directory => "images", :extension => "png"},
        {:width => 32, :height => 32}
      ],
      ["Sound",
        {:type => "sound", :directory => "sounds", :extension => "sfs"},
        {}
      ],
      ["Entity",
        {:type => "entity", :directory => "entities", :extension => "entity"},
        {}
      ],
      ["Tilemap",
        {:type => "tilemap", :directory => "tilemaps", :extension => "tilemap"},
        {:tilesWide => 15, :tilesTall => 10, :tileWidth => 32, :tileHeight => 32}
      ],
    ]

  - choices.each do |choice, params, fields|
    %button.choice{ 'data-params' => params.to_json, 'data-fields' => fields.to_json }= choice

  .field.template
    %label
      ${name}
      %input(type="${inputType}" name="options[${name}]" title="${name}" value="${value}")

  .details{:style => "display: none;"}
    %label
      Name
      = text_field_tag :name, "", {:title => 'Name', :id => nil, :"tip" => 'There is already a file with this name. Files in the same directory must have different names.'}

    .fields

    %button.create(disabled='disabled') Create

= render :partial => "file_template"

- content_for :javascript do
  :coffeescript
    params = null

    $("#new_file_modal button.choice").click (event) ->
      event.preventDefault()

      $(this).takeClass("active")

      $("#new_file_modal .details").show()

      params = $(this).data('params')
      params.path = projectConfig.directories[params.directory]

      fields = $("#new_file_modal .fields").empty()

      for name, value of $(this).data('fields')
        $("#new_file_modal .field.template").tmpl(
          name: name
          inputType: if $.isNumeric(value) then 'number' else 'text'
          value: value
        ).appendTo(fields)

      $("#new_file_modal .details input[name='name']").focus()

      # Trigger a fake window resize event to re-center the modal
      $(window).resize()

    $("#new_file_modal button.create").click (event) ->
      event.preventDefault()

      formData = $("#new_file_modal").serializeObject()

      # Special case to make entities use UUIDs
      if params.type is "entity"
        formData.uuid = Math.uuid(32, 16)

      file = newFileNode($.extend(formData, params))

      # Don't close the modal unless we've created a file.
      # Fixes bug where the modal closes with a blank name.
      if file
        $.modal.close()

    $("#new_file_modal input").keydown (event) ->
      if event.which is 13
        $("#new_file_modal button.create").click()
