%style
  :sass
    body > .content
      position: relative

    canvas
      &.ui, &.canvas
        left: 0
        position: absolute
        top: 0


%canvas.canvas(width=640 height=480)
%canvas.ui(width=640 height=480)

:coffeescript
  Sprite = (image, sourceX, sourceY, width, height) ->
    sourceX ||= 0
    sourceY ||= 0
    width ||= image.width
    height ||= image.height

    draw: (canvas, x, y) ->
      canvas.drawImage(
        image,
        sourceX,
        sourceY,
        width,
        height,
        x,
        y,
        width,
        height
      )

    width: width
    height: height

  $("body").dropImageReader
    callback: (file, event) ->
      img = new Image()

      img.onload = ->
        addObject Sprite(this)

      img.src = event.target.result

  DisplayObject = (I) ->
    $.reverseMerge I,
      transform: Matrix()

    self = Core(I).extend
      draw: (canvas) ->
        if I.sprite
          canvas.withTransform I.transform, (canvas) ->
            I.sprite.draw(canvas, 0, 0)

      drawOutline: (canvas) ->
        canvas.withTransform I.transform, (canvas) ->
          canvas.strokeRect(0, 0, I.width, I.height)

      pointWithin: (point) ->
        p = I.transform.inverse().transformPoint(point)

        return (0 <= p.x <= I.width) && (0 <= p.y <= I.height)

      move: (delta) ->
        I.transform = I.transform.concat(Matrix.translation(delta.x, delta.y))

    self.attrAccessor "transform"

    self

  objects = []

  addObject = (sprite) ->
    objects.push DisplayObject
      height: sprite.height
      sprite: sprite
      width: sprite.width

  refreshCanvas = ->
    canvas.clear()
    objects.invoke "draw", canvas

  uiElement = $("canvas.ui")
  ui = uiElement.powerCanvas()

  canvas = $("canvas.canvas").powerCanvas()

  eventToLocal = (event) ->
    offset = uiElement.offset()

    Point(
      event.pageX - offset.left,
      event.pageY - offset.top
    )

  activeObject = null
  previousMousePosition = Point(0, 0)

  $(document).bind "mousemove", (e) ->
    local = eventToLocal(e)

    ui.clear()
    ui.strokeColor "rgba(0, 0, 0, 0.25)"
    ui.fillColor "rgba(255, 0, 0, 0.25)"

    objects.each (object) ->
      if object.pointWithin(local)
        object.drawOutline(ui)

    if activeObject
      activeObject.move(local.subtract(previousMousePosition))

    previousMousePosition = local

  $(document).bind "mousedown", (e) ->
    local = eventToLocal(e)

    activeObject = objects.select (object) ->
      object.pointWithin(local)
    .first()

  $(document).bind "mouseup", (e) ->
    activeObject = null

  setInterval refreshCanvas, 1000 / 24
