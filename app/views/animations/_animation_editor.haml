= stylesheet_link_tag 'pixie/pixie'

.animation_editor
  %section
    .user_sprites
      - if @user_sprites.empty?
        %p
          You haven't created any sprites yet. Make some in the
          = link_to "Pixel Editor", root_path
      - else
        = render :partial => 'animations/animation_sprite', :collection => @user_sprites

  %nav.bottom
    .frame_sprites

  %nav.right
    - if @animation
      %h3#filename #{@animation.name}
    - else
      %h3#filename Title
    %button#save Save
    .animations
      %button#new_animation New

  .preview_box
    %div.animation_speed
      Speed
      %input{ :id => "animation_speed", :value => "110" }
      ms
    .sprite_container
      .sprites
      #play
      #stop

#load_sprite.template
  .sprite_container
    %img{ :src => "${url}", :alt => "${alt}", :title => "${title}", 'data-id' => "${id}" }

#create_animation.template
  .name ${name}
  .animation
    .cover.active
    .sprites
    .speed ${speed}

#placeholder.template
  .demo
  %p Drag sprites here to start animating

= render :partial => "pixie"

:coffeescript
  animation_id = null
  preview_dirty = false
  clear_frame_sprites = -> frame_sprites().remove()

  frame_sprites = ->
    frame_sprites_container().children()

  frame_sprites_container = -> $('.frame_sprites')

  frame_selected_sprite = -> $('.frame_sprites .sprite_container.selected')

  active_animation = -> $('.animations .animation .active')

  active_animation_sprites = -> active_animation().parent().find('.sprites')

  clear_preview = -> $('.preview_box img').remove()

  window.save = (event, data) ->
    notify "Saving..."

    $('.pixie').remove()
    $('.animation_editor').show()

    successCallback = (data) ->
      notify "Saved!"

      new_sprite = $('#load_sprite').tmpl(
        alt: data.sprite.title
        id: data.sprite.id
        title: data.sprite.title
        url: data.sprite.src
      )

      new_sprite.clone().appendTo('.user_sprites')

      $(".frame_sprites .sprite_container.pixel_editor").before(new_sprite.clone()).remove()

      $('.animations .animation .cover.active img').before(new_sprite.find('img')).remove()

    if data
      postData = $.extend({format: 'json'}, data)

      $.post '/sprites', postData, successCallback

  window.update_active_animation = ->
    active_animation_sprites().parent().find('.sprites').children().remove()
    frame_sprites().clone().appendTo(active_animation_sprites())

    active_animation().parent().find('.speed').text($('#animation_speed').val())

  $('.animation').live 'mousedown', ->
    update_active_animation()

    $('#animation_speed').val($(this).find('.speed').text())
    stop_animation()
    clear_frame_sprites()

    $(this).find('.sprites').children().clone().appendTo(frame_sprites_container())

    active_animation().removeClass('active')
    $(this).find('.cover').addClass('active')

  $('#new_animation').mousedown ->
    update_active_animation()
    stop_animation()

    active_animation().removeClass('active')

    clear_frame_sprites()

    $('#placeholder').tmpl().appendTo('.frame_sprites')

    $('#create_animation').tmpl(
      name: "Animation " + ($('.animations .animation').length + 1)
    ).insertAfter($('.animations .animation').last())

  $('.frame_sprites').sortable
    axis: "x"
    out: ->
      $(this).removeClass('highlight')
    over: ->
      $(this).addClass('highlight')
      $('.frame_sprites .demo, .frame_sprites p').remove()
    receive: (event, ui) ->
      $(this).removeClass('highlight')
      $('.frame_sprites .demo, .frame_sprites p').remove()
      active_animation().children().remove()
      active_animation().append(ui.item.find('img').clone())
    tolerance: "touch"

  $('.user_sprites .sprite_container').draggable
    addClasses: false
    connectToSortable: '.frame_sprites'
    containment: 'window'
    helper: 'clone'
    opacity: 0.7
    zIndex: 10000

  $('.animation_editor img, .user_sprites .sprite_container').live 'click mousedown mousemove', (event) ->
    event.preventDefault()

  play_next = ->
    preview_sprites = $('.preview_box img')
    active = $('.preview_box img.active').removeClass('active')

    active_index = active.index()
    length = preview_sprites.length

    preview_sprites.eq((active_index + 1) % length).addClass('active')

  play_animation = ->
    clearInterval(animation_id)

    if ($('.preview_box img').length != $('.frame_sprites img').length) || preview_dirty
      preview_dirty = false
      clear_preview()
      preview_sprites = $('.frame_sprites img').attr('style', '').clone()
      $('.preview_box .sprites').append(preview_sprites)

      preview_sprites.first().addClass('active')

      animation_id = setInterval(play_next, $('#animation_speed').val())
    else
      animation_id = setInterval(play_next, $('#animation_speed').val())

  pause_animation = ->
    clearInterval(animation_id)

  stop_animation = ->
    clearInterval(animation_id)

    clear_preview()

    $('#play').removeClass("pause")

  $('#play').mousedown ->
    if $(this).hasClass("pause") then pause_animation() else play_animation()

    $(this).toggleClass("pause") unless frame_sprites_container().find('.demo').length

  $('#stop').mousedown ->
    stop_animation()

  $('.frame_sprites .sprite_container').live
    mousedown: -> $(this).addClass('selected')
    dblclick: ->
      $(this).addClass('pixel_editor')
      unless $('.pixie').length
        pixelEditor = createPixelEditor
          width: 32
          height: 32
          image: $(this).find('img').attr('src').replace('http://images.pixie.strd6.com', '/s3')

        pixelEditor.bind('save', save)

        $('#fullscreen').append(pixelEditor)
        $('.animation_editor').hide()

        doSave: () ->
          pixelEditor.trigger('doSave')

    mouseenter: ->
      $('<div class="x" />').appendTo $(this)
      $('<div class="duplicate" />').appendTo $(this)
    mouseleave: ->
      $(this).find('.x, .duplicate').remove()

  $(document).mousedown ->
    frame_selected_sprite().removeClass('selected')

  $(document).bind "keydown", 'left', (event) ->
    preview_dirty = true
    event.preventDefault()

    selected_sprite = frame_selected_sprite()
    selected_sprite.find('.x, .duplicate').remove()

    if selected_sprite.prev().length
      selected_sprite.prev().before(selected_sprite)

  $(document).bind "keydown", 'right', (event) ->
    preview_dirty = true
    event.preventDefault()

    selected_sprite = frame_selected_sprite()
    selected_sprite.find('.x, .duplicate').remove()

    if selected_sprite.next().length
      selected_sprite.next().after(selected_sprite)

  $('.animations .name, #filename').liveEdit()

  $('.x').live 'mousedown', ->
    parent = $(this).parent()

    if parent.next().length && !parent.next().find('.x').length && !parent.next().find('.duplicate').length
      parent.next().append('<div class= "x" />')
      parent.next().append('<div class= "duplicate" />')

    parent.fadeOut 150, ->
      parent.remove()

      $('#placeholder').tmpl().appendTo('.frame_sprites') unless frame_sprites().length

  $('.duplicate').live 'mousedown', ->
    parent = $(this).parent()
    newEl = parent.clone()

    newEl.find('.x, .duplicate').remove()

    newEl.insertAfter(parent)

  $("#save").click ->
    notify("Saving...")

    postData =
      format: 'json'
      animation:
        name: $("#filename").text()
        states: saveData().length
        data_string: JSON.stringify(saveData())

    $.post('/animations', postData, (data) ->
      id = data.animation.id
      name = postData.animation.name

      display_name = (if (!name || name == "Title") then "Animation " + id else name)

      notify("Saved as <a href='/animations'>" + display_name + "</a>!")

      $("#flashes .notice")

    , "json")

  window.loadData = (data) ->
    if !data
      $('#create_animation').tmpl(
        name: "Animation 1"
        speed: $('#animation_speed').val()
      ).insertBefore($('#new_animation'))

      $('#placeholder').tmpl().appendTo('.frame_sprites')
    else if !data.animations.length
      $('#create_animation').tmpl(
        name: "Animation 1"
        speed: $('#animation_speed').val()
      ).insertBefore($('#new_animation'))

      $('#placeholder').tmpl().appendTo('.frame_sprites')
      $('.frame_sprites .demo').next().text("There were no animations found in this file. Drag sprites here to start animating.")
    else
      animation_el = $(data.animations).each (i, animation) ->

        animation_el = $('#create_animation').tmpl(
          name: animation.name
          speed: animation.speed
        ).insertBefore('nav.right #new_animation')

        $.each animation.frames, (i, frame) ->
          active_animation().removeClass('active')
          $('#load_sprite').tmpl(
            url: data.tileset[frame].src
            alt: data.tileset[frame].title
            title: data.tileset[frame].title
            id: data.tileset[frame].id
          ).appendTo($('.animations .name:contains("' + animation.name + '")').next().find('.sprites'))

        last_sprite_img = $('.animations .name:contains("' + animation.name + '")').next().find('.sprites').children().last().find('img')

        $('.animations .name:contains("' + animation.name + '")').next().find('.cover').append(last_sprite_img.clone())

      $('#animation_speed').val(active_animation().find('.speed').text())
      stop_animation()
      clear_frame_sprites()

      active_animation().find('.sprites').children().clone().appendTo(frame_sprites_container())

      $('.animations .animation').first().mousedown()

  window.saveData = ->
    update_active_animation()

    frames = []
    ids = []
    tiles = []

    $('.animations .animation').find('.sprites img').each (i, img) ->
      tile =
        id: $(img).data('id')
        src: $(img).attr('src')
        title: $(img).attr('title') || $(img).attr('alt')

      if $.inArray(tile.id, ids) == -1
        ids.push tile.id
        tiles.push(tile)

    animation_data = $('.animations .animation').map(->

      frame_data = $(this).find('.sprites img').each (i, img) ->
        tile_id = $(this).data('id')

        frames.push(ids.indexOf(tile_id))

      if frames.length

        animation = {
          name: $(this).prev().text()
          speed: $(this).find('.speed').text()
          frames: frames
        }

      frames = []

      return animation

    ).get()

    return {
      version: "1.2"
      tileset: tiles
      animations: animation_data
    }
