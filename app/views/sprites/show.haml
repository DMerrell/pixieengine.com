- @title = sprite.title || "sprite#{sprite.id}"
- @meta_desc = sprite.meta_desc
- @has_reg_popup = true

= link_to image_tag(sprite.image.url), load_sprite_path(sprite)

%p= sprite.description

.clear
%p
  By
  - if sprite.user
    = link_to sprite.user, sprite.user
  - else
    Anonymous

%ul.actions
  %li= link_to "#{image_tag "icons/picture_edit.png"} Load in Editor".html_safe, load_sprite_path(sprite), :class => "button"
  - if current_user
    %li.listMenu.menu
      = link_to "#{image_tag "icons/photo_add.png"} Add to Collection".html_safe, '#', :class => "button", "data-sprite_id" => sprite.id
      %ul.round{:style => "display: none;"}
        - current_user.collections.each do |collection|
          %li{ "data-collection_id" => collection.id }
            = check_box_tag "collection", "1", collection.sprites.include?(sprite), :id => nil, :name => nil
            = collection.title
        %li{ "data-collection_id" => "new" } New Collection
  - if owner?
    %li= link_to "#{image_tag "icons/table_edit.png"} Edit Details".html_safe, edit_sprite_path(sprite), :class => "button"
  - if owner_or_admin?
    %li= link_to "#{image_tag "icons/cross.png"} Delete".html_safe, sprite_path(sprite), :method => :delete, :class => "button"

%p
  - sprite.tag_list.each do |tag|
    = tag_link(tag)

%p
  - sprite.dimension_list.each do |dimension|
    = link_to dimension, sprites_path(:tagged => dimension)

= display_comments sprite

#newCollectionModal.modalElement
  = render :partial => "collections/form"

:javascript
  $(function() {
    function ajaxifyForm(selector) {
      var form = $(selector);

      form.ajaxForm({
        dataType: 'json',
        beforeSerialize: function($form) {
          $form.find("input[name=sprite_id]").val(spriteId);
        },
        success: function(data) {
          if(data.status == "ok") {
            $.modal.close();
            newCollectionCallback(data.title, data.id);
          } else {
            var errorExplanation = form.find(".errorExplanation");
            if(errorExplanation.length == 0) {
              errorExplanation = $("<div class='errorExplanation' />");
            }

            var errorList = $("<ul />");
            $.each(data.errors, function(i, error) {
              errorList.append($("<li />").text(error));
            });

            errorExplanation.html('');
            errorExplanation.append(errorList);

            form.prepend(errorExplanation);
          }
        }
      });
    }

    function newCollectionCallback(title, id) {
      $(".listMenu ul li:last-child").each(function() {
        var parentSpriteId = $(this).parent().prev().attr("data-sprite_id");
        var newElem = $("<li />").attr("data-collection_id", id);
        newElem.text(title);

        if(parentSpriteId == spriteId) {
          newElem.prepend("<input type='checkbox', value='1' checked='checked' />");
        } else {
          newElem.prepend("<input type='checkbox', value='1' />");
        }

        $(this).before(newElem);
      });
    }

    ajaxifyForm("#new_collection");

    var displayedMenu;
    var spriteId;

    $(".listMenu .button").click(function() {
      spriteId = $(this).attr("data-sprite_id");
      displayedMenu = $(this).next("ul");
      displayedMenu.show();

      setTimeout(function() {
        $(document).one('click', function() {
          displayedMenu.fadeOut();
        });
      }, 0);

      return false;
    });

    $(".menu li").live("click", function(event) {
      var collectionId = $(this).attr("data-collection_id");
      var checkbox = $(this).children("input");
      var boxClick = false;

      if($(event.target).is("input")) {
        boxClick = true;
      }

      if(collectionId == "new") {
        $("#newCollectionModal").modal();
      } else {
        var checked = !(checkbox.attr("checked") ^ boxClick);
        checkbox.attr("checked", checked);

        if(checked) {
          $.post("/collections/" + collectionId + "/add", {
            sprite_id: spriteId
          }, "json");
        } else {
          $.post("/collections/" + collectionId + "/remove", {
            sprite_id: spriteId
          }, "json");
        }
      }
    });
  });
