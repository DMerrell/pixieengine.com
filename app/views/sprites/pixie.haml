- @meta_desc = "Load #{sprite.meta_desc}"

= stylesheet_link_tag 'pixie/pixie'
= javascript_include_tag 'pixie/jqcolor', 'pixie/jquery.hotkeys', 'pixie/pixie'

- width = @width || 32
- height = @height || 32
- data = @data

#pixie

#sharing{:title => "Share this creation with your friends (requires having linked one of your social network sites to Pixie)"}
  = label_tag "share"
  = check_box_tag "share", "1", true

= render :partial => 'shared/register_modal'

:javascript
  (function($) {
    installedTools = [#{installed_tools.map(&:code).join(',')}];

    function postImage() {
      notify("Saving, please wait...");

      $.post('/sprites', {
        'format': 'js',
        'sprite[file_base64_encoded]': canvas.toBase64(),
        'sprite[width]': #{width},
        'sprite[height]': #{height},
        'sprite[broadcast]': $("#share").val(),
        'sprite[parent_id]': #{@parent_id.to_json}
      }, function(data) {
        eval(data);
        trackPageview("/event/save_drawing");
        canvas.dirty(false);
      }, "script");
    }

    $('#pixie').pixie({
      width: #{width},
      height: #{height},
      initializer: function(canvas) {
        // HAX: Global ref of canvas
        window.canvas = canvas;
        canvas.addAction({
          name: "Save",
          icon: "/images/icons/database_save.png",
          perform: function(canvas) {
            postImage();
          }
        });

        $.each(installedTools, function(i, tool) {
          canvas.addTool(tool);
        });

        (function(data) {
          if(data) {
            canvas.eachPixel(function(pixel, x, y) {
              var pos = x + y*canvas.width;
              pixel.color(data[pos], true);
            });
          }
        }(#{data}));

        window.onbeforeunload = function() {
          if (canvas.dirty()) {
            return "Your changes haven't yet been saved, if you leave now you will lose your work.";
          }
        };
      }
    });

  })(jQuery);
