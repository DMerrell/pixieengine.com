- @meta_desc = "Load #{sprite.meta_desc if sprite}"

= stylesheet_link_tag 'pixie/pixie'
= javascript_include_tag 'pixie/jqcolor', 'pixie/jquery.hotkeys', 'pixie/pixie'

- width = @width || 32
- height = @height || 32
- data = @data

#pixie

#newCanvasModal{ :style => 'display: none' }
  %p
    = label_tag :resize_width, "width"
    = text_field_tag :resize_width, width, {:title => 'width'}
  %p
    = label_tag :resize_height, "height"
    = text_field_tag :resize_height, height, {:title => 'height'}

  = button_to_function "New Canvas", "newCanvas()"

:javascript
  function newCanvas() {
    var newWidth = $('#resize_width').val();
    var newHeight = $('#resize_height').val();

    window.location.href = '/sprites/new?width=' + newWidth + '&height=' + newHeight
  }

  function setNewDimensions() {
    $("#newCanvasModal").removeAttr("style").modal({
      containerCss: {
        height: 200,
        width: 400
      },
      onClose: function() {
        $.modal.close();
        $("#newCanvasModal").attr("style", "display: none");
      }
    });
  }

:javascript
  (function($) {
    installedTools = [#{installed_tools.map(&:code).join(',')}];

    function postImage() {
      notify("Saving, please wait...");

      var postData = {
        'format': 'js',
        'sprite[width]': #{width},
        'sprite[height]': #{height},
        'sprite[parent_id]': #{@parent_id.to_json}
      };

      var frameData = canvas.frameDataToBase64();
      $.each(frameData, function(i, data) {
        postData["sprite[frame_data][" + i + "]"] = data;
      });
      postData["sprite[frames]"] = frameData.length;

      $.post('/sprites', postData, function(data) {
        eval(data);
        trackPageview("/event/save_drawing");
        canvas.dirty(false);
      }, "script");
    }

    $('#pixie').pixie({
      width: #{width},
      height: #{height},
      frames: #{data ? data.length : 1},
      initializer: function(canvas) {
        // HAX: Global ref of canvas
        window.canvas = canvas;

        canvas.addAction({
          name: "New",
          icon: "/images/icons/page_white_add.png",
          perform: function(canvas) {
            setNewDimensions();
          }
        });

        canvas.addAction({
          name: "Save",
          icon: "/images/icons/database_save.png",
          perform: function(canvas) {
            postImage();
          }
        });

        $.each(installedTools, function(i, tool) {
          canvas.addTool(tool);
        });

        (function(frameData) {
          if(frameData) {
            $.each(frameData, function(f, data) {
              canvas.eachPixel(function(pixel, x, y) {
                var pos = x + y*canvas.width;
                pixel.color(data[pos], true);
              }, undefined, f);
            });
          }
        }(#{data.to_json}));

        window.onbeforeunload = function() {
          if (canvas.dirty()) {
            return "Your changes haven't yet been saved, if you leave now you will lose your work.";
          }
        };
      }
    });

  })(jQuery);
